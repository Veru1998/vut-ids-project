begin;
create sequence bug_id_seq start with 1 increment by 1 nocache;
CREATE TABLE schema.bug
(
id                 integer not null DEFAULT bug_id_seq.NEXTVAL,
severity           integer            DEFAULT NULL,
severity_security  integer            NOT NULL,
status             smallint       NOT NULL DEFAULT '0',

patch_id           integer            DEFAULT NULL,           

CONSTRAINT primarykey_bug PRIMARY KEY (id),
CONSTRAINT foreignkey_bug_patch FOREIGN KEY (patch_id) REFERENCES Patch(id),
);

CREATE TABLE schema.languages
(
id integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
name varchar(20) not null,

constraint primarykey_languages primary key (id),
);

create table schema.module
(
id integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
name varchar(20) not null,
languages_id integer not null,
programmer_id integer not null, 

constraint primarykey_module primary key (id),
CONSTRAINT foreignkey_module_languages FOREIGN KEY (languages_id) REFERENCES languages(id),
CONSTRAINT foreignkey_module_programmer FOREIGN KEY (programmer_id) REFERENCES programmer(id),
);

create table schema.patch
(
id integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
created timestamp not null default current_timestamp,
deployed timestamp default null,
description varchar(255) default null,

author_id integer not null,
deployer_id integer not null,

constraint primarykey_patch primary key (id),
CONSTRAINT foreignkey_patch_author FOREIGN KEY (author_id) REFERENCES author(id),
CONSTRAINT foreignkey_patch_deployer FOREIGN KEY (deployer_id) REFERENCES deplayer(id),
);

create table schema.ticket
(
id          integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
description varchar(255),
status      varchar(10),

author_id integer not null,
solver_id integer default null,

constraint primarykey_ticket primary key (id),
CONSTRAINT foreignkey_ticket_author FOREIGN KEY (author_id) REFERENCES author(id),
CONSTRAINT foreignkey_ticket_solver FOREIGN KEY (solver_id) REFERENCES solver(id),
);

create table schema.user
(
id           integer     GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
password     varchar(20) not null,
  name       varchar(20) NOT NULL,
  surname    varchar(20) NOT NULL,
  created    timestamp   NOT NULL DEFAULT CURRENT_TIMESTAMP,
  birthday   date        DEFAULT NULL,
  mail       varchar(30) DEFAULT NULL,
  programmer_id integer  default null,
  
constraint primarykey_user primary key (id),   
CONSTRAINT foreignkey_user_programmer FOREIGN KEY (user_id) REFERENCES programmer(id),
);

CREATE TABLE schema.programmer
(
  id         integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
  github     varchar(20) NOT NULL,
  admin      smallint  NOT NULL DEFAULT '0',
  
constraint primarykey_programmer primary key (id),
);

-- tables for n-n relations
CREATE TABLE user_languages
(
  id          integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
  user_id     integer NOT NULL,
  language_id integer NOT NULL,
                                                                                
constraint primarykey_user_languages primary key (id),
CONSTRAINT foreignkey_user_languages_user FOREIGN KEY (user_id) REFERENCES user(id),
CONSTRAINT foreignkey_user_languages_languages FOREIGN KEY (languages_id) REFERENCES user(id),
);

CREATE TABLE ticket_bug
(
  id        integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
  ticket_id integer     NOT NULL,
  bug_id    integer     NOT NULL,
  
constraint primarykey_ticket_bug primary key (id),
CONSTRAINT foreignkey_ticket_bug_ticket FOREIGN KEY (ticket_id) REFERENCES ticket(id),
CONSTRAINT foreignkey_ticket_bug_bug    FOREIGN KEY (bug_id) REFERENCES bug(id),  
);

CREATE TABLE module_bug
(       
  id         integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
  module_id  integer     NOT NULL,
  bug_id     integer     NOT NULL,

constraint primarykey_module_bug primary key (id),
CONSTRAINT foreignkey_module_bug_module FOREIGN KEY (module_id) REFERENCES module(id),
CONSTRAINT foreignkey_module_bug_bug    FOREIGN KEY (bug_id) REFERENCES bug(id),  
);

insert into schema.user (password, name, surname, created, birthday, mail)
values
('user', 'user', 'Uzivatel', '2018-11-28 15:29:04', '2018-12-01', 'blbec@velkej.hodne'),
('prog', 'prog', 'Programator', '2018-11-28 15:29:04', NULL, NULL),
('admin', 'admin', 'Administrator', '2018-11-28 15:29:23', NULL, NULL);

commit;
